Card Dealing Implementation

- Create the deck. Make cards objects, or as elements in a data scructure?
  Will you implement shuffling, or will the 'dealer' pick cards at random? Both?
  Is there a way to use discrete math here?
	-> Finding a way to have the deck as a data structure and the cards
	   as value pairs (x, y) would PROB be best as it allows us to implement
	   a discrete maths way to 'deal' our cards. Using a map for the deck 
    	   theoretically makes this process easier.
        -> Having the dealer pick 15 cards at random would be enough. Shuffling
           must be implemented to make programming this part easier. Program
	   chooses 15 cards to give to the dealer. These are the cards to be
	   dealt.

- Once cards get dealt, they are no longer in the deck and are now in the 
  players hands or in the river. How will you ensure that players do not get 
  copies? Can this be handeled in the way the dealer is implemented?
        -> 15 cards will likely either be picked iteratively or at once to 
    	   ensure we don't get copies.. 
	   We will need to shuffle the deck, and then pick our 15 cards.
           ```
	   map<pair, int> deck = ...
	   shuffle(deck)
	   int cardsToDeal[15][2];
	   int i = 0;

	   for (const auto &card: deck) { 
		auto key_pair = card.first;
		cardsToDeal[i][0] = key_pair.first;
		cardsToDeal[i][1] = key_pair.second;

		i++;
		if(i > 14)
		    break;
	   }
	   ```
	   In the psuedo code, might need to do something different with the 
           map but idea stays the same... Shuffle the deck, then pick 15 cards.
	   Review how to use maps and vectors in C++. Iterative solution.

- If there is a dealer, we will need to implement a 6th 'person'.
  Having the players deal adds a layer of complexity that I do not
  want to deal with right now. After each round, we choose who goes
  first by simply incrementing a value.. later I will use this to
  decide who does small blind/big blind. Dealer option makes the most
  sense right now.
	-> Dealer would distrubute the cards it gets from the deck..
	   ideally it would have 15 'cards' and distribute them at random. Later
	   we can implement something to alter the chances.
	   It would probably be best to make the dealer only deal cards for now.
	-> Dealer will have to know when betting starts and finishes in order
	   to reveal cards, this may be too complex for now.

- Players need a way to store their cards, and also their money, wins, losses, 
  etc etc in the future. 
       	-> Try to implement using a map.. or make it an object!!
	ideally: player num, pair(x,y), money, agression, hand value(all ints)
	Will most likely need to make this an object.
	We will have 4 AI and 1 user.. will need to make account of this. AI 
	will have agression, user will not. Agression will come into play 
	much much later.
